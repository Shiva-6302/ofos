/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.102
 * Generated at: 2025-04-27 08:19:08 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class registration_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <title>Register Form</title>\n");
      out.write("    <meta charset=\"utf-8\">\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"css/loginStyle.css\">\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\">\n");
      out.write("    <script src=\"https://code.jquery.com/jquery-3.3.1.slim.min.js\"></script>\n");
      out.write("    <link href=\"https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\">\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("    <div class=\"container-fluid\">\n");
      out.write("        <div class=\"row\">\n");
      out.write("            <div class=\"col-lg-6 col-md-6 d-none d-md-block image-container\"></div>\n");
      out.write("\n");
      out.write("            <div class=\"col-lg-6 col-md-6 form-container\">\n");
      out.write("                <div class=\"col-lg-8 col-md-12 col-sm-9 col-xs-12 form-box text-center\">\n");
      out.write("                    <div class=\"logo mb-3\">\n");
      out.write("                        <img src=\"images/favicon.png\" width=\"50px\">\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"heading mb-4\">\n");
      out.write("                        <h4>Create an account</h4>\n");
      out.write("                    </div>\n");
      out.write("                    <form action = \"Register\" method = \"post\" >\n");
      out.write("                        <div class=\"form-input\">\n");
      out.write("                            <span><i class=\"fa fa-user\"></i></span>\n");
      out.write("                            <input type=\"text\" name= \"name\" placeholder=\"Full Name\" required>\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"form-input\">\n");
      out.write("                            <span><i class=\"fa fa-envelope\"></i></span>\n");
      out.write("                            <input type=\"email\" name= \"email\" placeholder=\"Email Address\" required>\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"form-input\">\n");
      out.write("                            <span><i class=\"fa fa-phone\"></i></span> <!-- Add phone icon -->\n");
      out.write("                            <input type=\"tel\" name= \"phone\" placeholder=\"Phone Number\" required> <!-- Use type=\"tel\" for phone number input -->\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"form-input\">\n");
      out.write("                            <span><i class=\"fa fa-lock\"></i></span>\n");
      out.write("                            <input type=\"password\" name= \"password\" placeholder=\"Password\" required>\n");
      out.write("                        </div>\n");
      out.write("                       <div class=\"form-input\">\n");
      out.write("                            <span><i class=\"fa fa-lock\"></i></span>\n");
      out.write("                            <input type=\"text\" name= \"address\" placeholder=\"Address\" required>\n");
      out.write("                        </div>\n");
      out.write("\n");
      out.write("                        <div class=\"row mb-3\">\n");
      out.write("                            <div class=\"col-12 d-flex\">\n");
      out.write("                                <div class=\"custom-control custom-checkbox\">\n");
      out.write("                                    <input type=\"checkbox\" class=\"custom-control-input\" id=\"cb1\">\n");
      out.write("                                    <label class=\"custom-control-label text-white\" for=\"cb1\">I agree all terms and conditions</label>\n");
      out.write("                                </div>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"text-left mb-3\">\n");
      out.write("                            <button type=\"submit\" class=\"btn\">Register</button>\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"text-center mb-2\">\n");
      out.write("                            <div class=\"mb-3\" style=\"color: #777\">or register with</div>\n");
      out.write("                            <a href=\"https://www.facebook.com/login/\" class=\"btn btn-social btn-facebook\">facebook</a>\n");
      out.write("                            <a href=\"https://accounts.google.com/v3/signin/identifier?hl=en&ifkv=ASKV5MjuxWQ5qc7Oy4tsH1vPjCi85w86u-dv41ohnJqMdw04idO4dD_uc8dJHCrUvKww2F35uZsKHQ&flowName=GlifWebSignIn&flowEntry=ServiceLogin&dsh=S790080139%3A1745738186342195\" class=\"btn btn-social btn-google\">google</a>\n");
      out.write("                            <a href=\"https://x.com/i/flow/login\" class=\"btn btn-social btn-twitter\">twitter</a>\n");
      out.write("                        </div>\n");
      out.write("                        <div style=\"color: #777\">Already have an account\n");
      out.write("                            <a href=\"log.jsp\" class=\"login-link\">Login here</a>\n");
      out.write("                        </div>\n");
      out.write("                    </form>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
